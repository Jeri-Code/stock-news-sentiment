
services:
  db:
    image: postgres:15
    container_name: sns_db
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB} -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 5

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sns_streamlit
    restart: unless-stopped
    env_file: .env
    environment:
      WAREHOUSE_DSN: ${WAREHOUSE_DSN}
    ports:
      - "8501:8501"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./.streamlit:/app/streamlit:ro
      - ./pages:/app/pages:ro
      - ./app.py:/app/app.py:ro

  airflow-init:
    image: apache/airflow:2.9.2-python3.11
    container_name: sns_airflow_init
    restart: "no"
    env_file: .env
    entrypoint: /bin/bash
    command: >
      -c "
      set -e;
      airflow db migrate;
      airflow users list | grep -q \" ${AIRFLOW_USER} \" || airflow users create --username ${AIRFLOW_USER} --password ${AIRFLOW_PASSWORD} --firstname Admin --lastname User --role Admin --email ${AIRFLOW_EMAIL};
      airflow connections create-default-connections || true
      "
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${PG_USER}:${PG_PASSWORD}@db:${PG_PORT}/${PG_DB}
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${WEBSERVER_SECRET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      ALPHAVANTAGE_API_KEY: ${ALPHAVANTAGE_API_KEY}
      TICKERS: ${TICKERS}
      AV_FUNCTION: ${AV_FUNCTION}
      AV_OUTPUTSIZE: ${AV_OUTPUTSIZE}
      AV_SLEEP_SECONDS: ${AV_SLEEP_SECONDS}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
    depends_on:
      db:
        condition: service_healthy

  airflow-webserver:
    image: apache/airflow:2.9.2-python3.11
    container_name: sns_airflow_web
    restart: unless-stopped
    env_file: .env
    command: webserver
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${PG_USER}:${PG_PASSWORD}@db:${PG_PORT}/${PG_DB}
    volumes:
  
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./ingestion:/opt/ingestion
    depends_on:
      db:
        condition: service_healthy

  airflow-scheduler:
    image: apache/airflow:2.9.2-python3.11
    container_name: sns_airflow_sched
    restart: unless-stopped
    env_file: .env
    command: scheduler
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${PG_USER}:${PG_PASSWORD}@db:${PG_PORT}/${PG_DB}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./ingestion:/opt/ingestion 
    depends_on:
      db:
        condition: service_healthy
volumes:

  pgdata:
